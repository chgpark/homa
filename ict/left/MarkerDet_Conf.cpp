
#include "MarkerDet_Conf.h"

#if MARKERSIZE_270
float MARKER_RATIO=270.0/270.0;
#elif MARKERSIZE_250
float MARKER_RATIO=250.0/270.0;
#elif MARKERSIZE_230
float MARKER_RATIO=230.0/270.0;
#endif


int MarkerIDPattern_cnt[MARKER_NUM];

//Infinity, min zoom, 1920x1080 (new)
float CamParm_focal[2] = { (float)1399.5896  , (float)1395.972 };
float CamParm_principal[2] = { (float)957.1436  , (float)557.1406};
float CamParm_distortion[4] = {(float)0.1000296  , (float)-0.1572728,  (float)0.000565  , (float)0.0020948 };


float srcIDPoints[MARKER_ID_PTS*2] = {	(float)70*MARKER_RATIO, (float)70*MARKER_RATIO,
	(float)135*MARKER_RATIO, (float)70*MARKER_RATIO,
	(float)200*MARKER_RATIO, (float)70*MARKER_RATIO,
	(float)70*MARKER_RATIO, (float)135*MARKER_RATIO,
	(float)200*MARKER_RATIO, (float)135*MARKER_RATIO,		
	(float)70*MARKER_RATIO, (float)200*MARKER_RATIO,
	(float)135*MARKER_RATIO, (float)200*MARKER_RATIO,	
	(float)200*MARKER_RATIO, (float)200*MARKER_RATIO

};


float srcTheOtherPoints[(MARKER_INPUT_PTS-MARKER_PTS)*2] = 
											{	 35*MARKER_RATIO,  35*MARKER_RATIO,
												235*MARKER_RATIO,  35*MARKER_RATIO,
												235*MARKER_RATIO, 235*MARKER_RATIO,
												 35*MARKER_RATIO, 235*MARKER_RATIO,
												 100*MARKER_RATIO,  100*MARKER_RATIO,
												170*MARKER_RATIO,  100*MARKER_RATIO,
												170*MARKER_RATIO, 170*MARKER_RATIO,
												 100*MARKER_RATIO, 170*MARKER_RATIO	};

bool MarkerIDPattern[MARKER_NUM][MARKER_ID_PTS] =
{
	{ 	 1,0,0,
		 0,  0,
		 0,0,0}, // 1
		 {1,0,1,
		 0,  0,
		 0,0,0}, // 2
		 { 	 1,0,1,
		 0,  0,
		 0,0,1}, // 3
		 { 	 1,1,1,
		 0,  0,
		 0,0,1}, // 4
		 
};

#define X_OFFSSET	0
#define Y_OFFSSET	0
#define Z_OFFSSET	0
//world
float World_XYZ_data[MARKER_NUM][MARKER_INPUT_PTS][3] =
{
	{ 	{ 0.0 - MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{  (float)(- 35*MARKER_RATIO), (float)(35*MARKER_RATIO),0},
			{ (float)(35*MARKER_RATIO), (float)(35*MARKER_RATIO) ,0},
			{ (float)(35*MARKER_RATIO),(float)(-35*MARKER_RATIO),0},
			{ (float)(-35*MARKER_RATIO), (float)(- 35*MARKER_RATIO), 0},
		},
	
		{ 	{ 0.0 - MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{  (float)(- 35*MARKER_RATIO), (float)(35*MARKER_RATIO),0},
			{ (float)(35*MARKER_RATIO), (float)(35*MARKER_RATIO) ,0},
			{ (float)(35*MARKER_RATIO),(float)(-35*MARKER_RATIO),0},
			{ (float)(-35*MARKER_RATIO), (float)(- 35*MARKER_RATIO), 0},
		},
			{ 	{ 0.0 - MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{  (float)(- 35*MARKER_RATIO), (float)(35*MARKER_RATIO),0},
			{ (float)(35*MARKER_RATIO), (float)(35*MARKER_RATIO) ,0},
			{ (float)(35*MARKER_RATIO),(float)(-35*MARKER_RATIO),0},
			{ (float)(-35*MARKER_RATIO), (float)(- 35*MARKER_RATIO), 0},
		},
			{ 	{ 0.0 - MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 + MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - MARKER_WIDTH/2.0, 0.0 - MARKER_HEIGHT/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 + (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 + (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET},
		{ 0.0 - (MARKER_WIDTH-70.0*MARKER_RATIO)/2.0, 0.0 - (MARKER_HEIGHT-70.0*MARKER_RATIO)/2.0 + Y_OFFSSET, Z_OFFSSET}, // 1

		{  (float)(- 35*MARKER_RATIO), (float)(35*MARKER_RATIO),0},
			{ (float)(35*MARKER_RATIO), (float)(35*MARKER_RATIO) ,0},
			{ (float)(35*MARKER_RATIO),(float)(-35*MARKER_RATIO),0},
			{ (float)(-35*MARKER_RATIO), (float)(- 35*MARKER_RATIO), 0},
		},


};
